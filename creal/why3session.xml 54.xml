<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="5">
<prover id="0" name="Alt-Ergo" version="2.2.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC3" version="2.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Eprover" version="2.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC4" version="1.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="6" name="Z3" version="4.8.4" timelimit="1" steplimit="0" memlimit="1000"/>
<file name="../creal.mlw" proved="true">
<theory name="Top" proved="true">
 <goal name="VC power2" expl="VC for power2" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.05"/></proof>
 </goal>
 <goal name="VC shift_left" expl="VC for shift_left" proved="true">
 <proof prover="0" timelimit="5"><result status="valid" time="0.00" steps="0"/></proof>
 </goal>
 <goal name="VC ediv_mod" expl="VC for ediv_mod" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.86"/></proof>
 </goal>
 <goal name="VC shift_right" expl="VC for shift_right" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.09"/></proof>
 </goal>
 <goal name="VC isqrt" expl="VC for isqrt" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC isqrt.0" expl="loop invariant init" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC isqrt.1" expl="loop invariant init" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC isqrt.2" expl="loop invariant init" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC isqrt.3" expl="loop variant decrease" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="VC isqrt.4" expl="loop invariant preservation" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC isqrt.5" expl="loop invariant preservation" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC isqrt.6" expl="loop invariant preservation" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.34"/></proof>
  </goal>
  <goal name="VC isqrt.7" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC isqrt.7.0" expl="assertion" proved="true">
   <proof prover="3" timelimit="5"><result status="valid" time="2.25"/></proof>
   </goal>
   <goal name="VC isqrt.7.1" expl="assertion" proved="true">
   <proof prover="0" timelimit="5"><result status="valid" time="0.02" steps="18"/></proof>
   </goal>
   <goal name="VC isqrt.7.2" expl="VC for isqrt" proved="true">
   <proof prover="0" timelimit="5"><result status="valid" time="0.02" steps="20"/></proof>
   </goal>
   <goal name="VC isqrt.7.3" expl="VC for isqrt" proved="true">
   <proof prover="0" timelimit="5"><result status="valid" time="0.02" steps="22"/></proof>
   </goal>
   <goal name="VC isqrt.7.4" expl="VC for isqrt" proved="true">
   <proof prover="0" timelimit="5"><result status="valid" time="0.01" steps="22"/></proof>
   </goal>
   <goal name="VC isqrt.7.5" expl="VC for isqrt" proved="true">
   <proof prover="0" timelimit="5"><result status="valid" time="0.01" steps="25"/></proof>
   </goal>
   <goal name="VC isqrt.7.6" expl="VC for isqrt" proved="true">
   <proof prover="0" timelimit="5"><result status="valid" time="0.09" steps="27"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC isqrt.8" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC isqrt.8.0" expl="assertion" proved="true">
   <proof prover="0" timelimit="5"><result status="timeout" time="5.00"/></proof>
   <proof prover="3" timelimit="5"><result status="valid" time="0.31"/></proof>
   </goal>
   <goal name="VC isqrt.8.1" expl="assertion" proved="true">
   <proof prover="0" timelimit="5"><result status="valid" time="0.01" steps="18"/></proof>
   </goal>
   <goal name="VC isqrt.8.2" expl="VC for isqrt" proved="true">
   <proof prover="0" timelimit="5"><result status="valid" time="0.02" steps="21"/></proof>
   </goal>
   <goal name="VC isqrt.8.3" expl="VC for isqrt" proved="true">
   <proof prover="0" timelimit="5"><result status="valid" time="0.02" steps="23"/></proof>
   </goal>
   <goal name="VC isqrt.8.4" expl="VC for isqrt" proved="true">
   <proof prover="0" timelimit="5"><result status="valid" time="0.28" steps="25"/></proof>
   </goal>
   <goal name="VC isqrt.8.5" expl="VC for isqrt" proved="true">
   <proof prover="0" timelimit="5"><result status="valid" time="0.23" steps="27"/></proof>
   </goal>
   <goal name="VC isqrt.8.6" expl="VC for isqrt" proved="true">
   <proof prover="0" timelimit="5"><result status="valid" time="4.08" steps="137"/></proof>
   <proof prover="3" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
   </goal>
   <goal name="VC isqrt.8.7" expl="VC for isqrt" proved="true">
   <proof prover="0" timelimit="5"><result status="valid" time="0.51" steps="122"/></proof>
   </goal>
   <goal name="VC isqrt.8.8" expl="VC for isqrt" proved="true">
   <proof prover="0" timelimit="5"><result status="valid" time="0.01" steps="31"/></proof>
   </goal>
   <goal name="VC isqrt.8.9" expl="VC for isqrt" proved="true">
   <proof prover="0" timelimit="5"><result status="valid" time="0.01" steps="32"/></proof>
   </goal>
   <goal name="VC isqrt.8.10" expl="VC for isqrt" proved="true">
   <proof prover="0" timelimit="5"><result status="valid" time="0.01" steps="33"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC isqrt.9" expl="postcondition" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.55"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="_B_non_neg" proved="true">
 <proof prover="0" timelimit="5"><result status="valid" time="0.01" steps="32"/></proof>
 </goal>
 <goal name="_B_group_homomorphism" proved="true">
 <proof prover="0" timelimit="5"><result status="valid" time="0.01" steps="44"/></proof>
 </goal>
 <goal name="_B_inverse" proved="true">
 <proof prover="0" timelimit="5"><result status="valid" time="0.10" steps="337"/></proof>
 </goal>
 <goal name="_B_sqrt_mul" proved="true">
 <proof prover="0" timelimit="5"><result status="valid" time="0.47" steps="200"/></proof>
 </goal>
 <goal name="_B_spec_pos" proved="true">
 <transf name="intros" proved="true" arg1="n,H">
  <goal name="_B_spec_pos.0" proved="true">
  <transf name="assert" proved="true" arg1="(pow (from_int 4) (from_int n) = from_int (power 4 n))">
   <goal name="_B_spec_pos.0.0" expl="asserted formula" proved="true">
   <proof prover="0" timelimit="5"><result status="valid" time="0.01" steps="12"/></proof>
   </goal>
   <goal name="_B_spec_pos.0.1" proved="true">
   <proof prover="1"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="_B_spec_neg_0" proved="true">
 <proof prover="0" timelimit="5"><result status="valid" time="0.01" steps="12"/></proof>
 </goal>
 <goal name="_B_spec_neg" proved="true">
 <proof prover="0" timelimit="5"><result status="valid" time="0.04" steps="66"/></proof>
 </goal>
 <goal name="pow_mul2_exp" proved="true">
 <proof prover="0" timelimit="5"><result status="valid" time="0.12" steps="60"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 </goal>
 <goal name="VC round_z_over_4" expl="VC for round_z_over_4" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC round_z_over_4.0" expl="precondition" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC round_z_over_4.1" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC round_z_over_4.1.0" expl="assertion" proved="true">
   <proof prover="0" timelimit="5"><result status="valid" time="0.04" steps="148"/></proof>
   </goal>
   <goal name="VC round_z_over_4.1.1" expl="VC for round_z_over_4" proved="true">
   <proof prover="0"><result status="valid" time="0.37" steps="409"/></proof>
   <transf name="split_all_full" proved="true" >
    <goal name="VC round_z_over_4.1.1.0" expl="VC for round_z_over_4" proved="true">
    <proof prover="0"><result status="valid" time="0.37" steps="409"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC round_z_over_4.1.2" expl="VC for round_z_over_4" proved="true">
   <proof prover="0"><result status="valid" time="0.73" steps="555"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC round_z_over_4.2" expl="assertion" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC round_z_over_4.2.0" expl="VC for round_z_over_4" proved="true">
   <proof prover="0"><result status="valid" time="0.10" steps="97"/></proof>
   <proof prover="3"><result status="timeout" time="1.00"/></proof>
   </goal>
   <goal name="VC round_z_over_4.2.1" expl="VC for round_z_over_4" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC round_z_over_4.2.2" expl="VC for round_z_over_4" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC round_z_over_4.2.3" expl="VC for round_z_over_4" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="VC round_z_over_4.2.3.0" expl="VC for round_z_over_4" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="VC round_z_over_4.2.3.0.0" expl="VC for round_z_over_4" proved="true">
     <proof prover="0" timelimit="30" memlimit="4000"><result status="valid" time="8.93" steps="6086"/></proof>
     <proof prover="3" timelimit="30" memlimit="4000"><result status="timeout" time="30.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC round_z_over_4.3" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.71" steps="667"/></proof>
  <proof prover="3"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC compute_round" expl="VC for compute_round" proved="true">
 <transf name="split_all_full" proved="true" >
  <goal name="VC compute_round.0" expl="assertion" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC compute_round.0.0" expl="VC for compute_round" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC compute_round.0.1" expl="VC for compute_round" proved="true">
   <proof prover="0"><result status="valid" time="0.94" steps="466"/></proof>
   </goal>
   <goal name="VC compute_round.0.2" expl="VC for compute_round" proved="true">
   <proof prover="0"><result status="valid" time="0.09" steps="105"/></proof>
   <proof prover="3"><result status="timeout" time="1.00"/></proof>
   </goal>
   <goal name="VC compute_round.0.3" expl="VC for compute_round" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="18"/></proof>
   </goal>
   <goal name="VC compute_round.0.4" expl="VC for compute_round" proved="true">
   <proof prover="3" timelimit="5"><result status="valid" time="0.07"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC compute_round.1" expl="assertion" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC compute_round.1.0" expl="VC for compute_round" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC compute_round.1.1" expl="VC for compute_round" proved="true">
   <proof prover="0"><result status="valid" time="0.12" steps="116"/></proof>
   </goal>
   <goal name="VC compute_round.1.2" expl="VC for compute_round" proved="true">
   <proof prover="0"><result status="valid" time="1.09" steps="421"/></proof>
   </goal>
   <goal name="VC compute_round.1.3" expl="VC for compute_round" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="20"/></proof>
   </goal>
   <goal name="VC compute_round.1.4" expl="VC for compute_round" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC compute_round.2" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.08"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC compute_add" expl="VC for compute_add" proved="true">
 <proof prover="0"><result status="valid" time="0.02" steps="44"/></proof>
 <proof prover="3"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="VC compute_neg" expl="VC for compute_neg" proved="true">
 <proof prover="0"><result status="valid" time="0.02" steps="93"/></proof>
 </goal>
 <goal name="VC compute_sub" expl="VC for compute_sub" proved="true">
 <proof prover="3"><result status="valid" time="0.09"/></proof>
 </goal>
 <goal name="VC compute_cst" expl="VC for compute_cst" proved="true">
 <transf name="split_all_full" proved="true" >
  <goal name="VC compute_cst.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC compute_cst.1" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC compute_cst.1.0" expl="VC for compute_cst" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="174"/></proof>
   </goal>
   <goal name="VC compute_cst.1.1" expl="VC for compute_cst" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="16"/></proof>
   </goal>
   <goal name="VC compute_cst.1.2" expl="VC for compute_cst" proved="true">
   <proof prover="0" timelimit="5"><result status="valid" time="0.13" steps="153"/></proof>
   </goal>
   <goal name="VC compute_cst.1.3" expl="VC for compute_cst" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="20"/></proof>
   </goal>
   <goal name="VC compute_cst.1.4" expl="VC for compute_cst" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="22"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC compute_cst.2" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC compute_cst.2.0" expl="VC for compute_cst" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="16"/></proof>
   </goal>
   <goal name="VC compute_cst.2.1" expl="VC for compute_cst" proved="true">
   <proof prover="3"><result status="valid" time="0.16"/></proof>
   </goal>
   <goal name="VC compute_cst.2.2" expl="VC for compute_cst" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="20"/></proof>
   </goal>
   <goal name="VC compute_cst.2.3" expl="VC for compute_cst" proved="true">
   <proof prover="0"><result status="valid" time="0.22" steps="193"/></proof>
   </goal>
   <goal name="VC compute_cst.2.4" expl="VC for compute_cst" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="24"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC compute_cst.3" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC compute_cst.4" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC compute_cst.5" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC compute_cst.5.0" expl="VC for compute_cst" proved="true">
   <proof prover="0"><result status="valid" time="0.06" steps="14"/></proof>
   </goal>
   <goal name="VC compute_cst.5.1" expl="VC for compute_cst" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="14"/></proof>
   </goal>
   <goal name="VC compute_cst.5.2" expl="VC for compute_cst" proved="true">
   <proof prover="0"><result status="valid" time="0.34" steps="293"/></proof>
   </goal>
   <goal name="VC compute_cst.5.3" expl="VC for compute_cst" proved="true">
   <proof prover="2"><result status="valid" time="0.38"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC compute_cst.6" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC compute_cst.6.0" expl="VC for compute_cst" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="16"/></proof>
   </goal>
   <goal name="VC compute_cst.6.1" expl="VC for compute_cst" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC compute_cst.6.2" expl="VC for compute_cst" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="19"/></proof>
   </goal>
   <goal name="VC compute_cst.6.3" expl="VC for compute_cst" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="19"/></proof>
   </goal>
   <goal name="VC compute_cst.6.4" expl="VC for compute_cst" proved="true">
   <proof prover="2"><result status="valid" time="0.43"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC compute_cst.7" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="110"/></proof>
  </goal>
  <goal name="VC compute_cst.8" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC compute_cst.9" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.08"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC _sqrt_incr_spec" expl="VC for _sqrt_incr_spec" proved="true">
 <proof prover="0"><result status="valid" time="0.15" steps="333"/></proof>
 </goal>
 <goal name="VC _sqrt_incr_bounds" expl="VC for _sqrt_incr_bounds" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC _sqrt_incr_bounds.0" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="270"/></proof>
  </goal>
  <goal name="VC _sqrt_incr_bounds.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="53"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC sqrt_ceil_floor" expl="VC for sqrt_ceil_floor" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC sqrt_ceil_floor.0" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC sqrt_ceil_floor.1" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sqrt_ceil_floor.2" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC sqrt_ceil_floor.2.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC sqrt_ceil_floor.2.1" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="17"/></proof>
   </goal>
   <goal name="VC sqrt_ceil_floor.2.2" expl="VC for sqrt_ceil_floor" proved="true">
   <proof prover="3"><result status="valid" time="0.22"/></proof>
   </goal>
   <goal name="VC sqrt_ceil_floor.2.3" expl="VC for sqrt_ceil_floor" proved="true">
   <proof prover="0"><result status="valid" time="0.13" steps="153"/></proof>
   </goal>
   <goal name="VC sqrt_ceil_floor.2.4" expl="VC for sqrt_ceil_floor" proved="true">
   <proof prover="0"><result status="valid" time="0.18" steps="143"/></proof>
   </goal>
   <goal name="VC sqrt_ceil_floor.2.5" expl="VC for sqrt_ceil_floor" proved="true">
   <proof prover="3"><result status="valid" time="0.26"/></proof>
   </goal>
   <goal name="VC sqrt_ceil_floor.2.6" expl="VC for sqrt_ceil_floor" proved="true">
   <proof prover="0"><result status="valid" time="0.34" steps="173"/></proof>
   </goal>
   <goal name="VC sqrt_ceil_floor.2.7" expl="VC for sqrt_ceil_floor" proved="true">
   <proof prover="0"><result status="valid" time="0.34" steps="180"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC sqrt_ceil_floor.3" expl="unreachable point" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC sqrt_ceil_floor.4" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC sqrt_ceil_floor.5" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC sqrt_floor_floor" expl="VC for sqrt_floor_floor" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC sqrt_floor_floor.0" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="VC sqrt_floor_floor.1" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="VC sqrt_floor_floor.2" expl="unreachable point" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC sqrt_floor_floor.3" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="113"/></proof>
  </goal>
  <goal name="VC sqrt_floor_floor.4" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.06"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
