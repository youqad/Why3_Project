<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="5">
<prover id="0" name="Alt-Ergo" version="2.2.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC3" version="2.4.1" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Eprover" version="2.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC4" version="1.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="Spass" version="3.7" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="Vampire" version="4.3.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="6" name="Z3" version="4.8.4" timelimit="1" steplimit="0" memlimit="1000"/>
<file name="../creal.mlw">
<theory name="Top">
 <goal name="VC power2" expl="VC for power2" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.05"/></proof>
 </goal>
 <goal name="VC shift_left" expl="VC for shift_left" proved="true">
 <proof prover="0" timelimit="5"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
 <goal name="VC ediv_mod" expl="VC for ediv_mod" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.86"/></proof>
 </goal>
 <goal name="VC shift_right" expl="VC for shift_right" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC shift_right.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC shift_right.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC shift_right.2" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="8"/></proof>
  <proof prover="3"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC isqrt" expl="VC for isqrt" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC isqrt.0" expl="loop invariant init" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC isqrt.1" expl="loop invariant init" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC isqrt.2" expl="loop invariant init" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC isqrt.3" expl="loop variant decrease" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.14"/></proof>
  </goal>
  <goal name="VC isqrt.4" expl="loop invariant preservation" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC isqrt.5" expl="loop invariant preservation" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC isqrt.6" expl="loop invariant preservation" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.34"/></proof>
  </goal>
  <goal name="VC isqrt.7" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC isqrt.7.0" expl="assertion" proved="true">
   <proof prover="3" timelimit="5"><result status="valid" time="2.74"/></proof>
   </goal>
   <goal name="VC isqrt.7.1" expl="assertion" proved="true">
   <proof prover="0" timelimit="5"><result status="valid" time="0.02" steps="18"/></proof>
   </goal>
   <goal name="VC isqrt.7.2" expl="VC for isqrt" proved="true">
   <proof prover="0" timelimit="5"><result status="valid" time="0.02" steps="20"/></proof>
   </goal>
   <goal name="VC isqrt.7.3" expl="VC for isqrt" proved="true">
   <proof prover="0" timelimit="5"><result status="valid" time="0.02" steps="22"/></proof>
   </goal>
   <goal name="VC isqrt.7.4" expl="VC for isqrt" proved="true">
   <proof prover="0" timelimit="5"><result status="valid" time="0.01" steps="22"/></proof>
   </goal>
   <goal name="VC isqrt.7.5" expl="VC for isqrt" proved="true">
   <proof prover="0" timelimit="5"><result status="valid" time="0.01" steps="25"/></proof>
   </goal>
   <goal name="VC isqrt.7.6" expl="VC for isqrt" proved="true">
   <proof prover="0" timelimit="5"><result status="valid" time="0.09" steps="27"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC isqrt.8" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC isqrt.8.0" expl="assertion" proved="true">
   <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <proof prover="3" timelimit="5"><result status="valid" time="0.31"/></proof>
   </goal>
   <goal name="VC isqrt.8.1" expl="assertion" proved="true">
   <proof prover="0" timelimit="5"><result status="valid" time="0.01" steps="18"/></proof>
   </goal>
   <goal name="VC isqrt.8.2" expl="VC for isqrt" proved="true">
   <proof prover="0" timelimit="5"><result status="valid" time="0.02" steps="21"/></proof>
   </goal>
   <goal name="VC isqrt.8.3" expl="VC for isqrt" proved="true">
   <proof prover="0" timelimit="5"><result status="valid" time="0.02" steps="23"/></proof>
   </goal>
   <goal name="VC isqrt.8.4" expl="VC for isqrt" proved="true">
   <proof prover="0" timelimit="5"><result status="valid" time="0.28" steps="25"/></proof>
   </goal>
   <goal name="VC isqrt.8.5" expl="VC for isqrt" proved="true">
   <proof prover="0" timelimit="5"><result status="valid" time="0.23" steps="27"/></proof>
   </goal>
   <goal name="VC isqrt.8.6" expl="VC for isqrt" proved="true">
   <proof prover="0" timelimit="5"><result status="valid" time="3.02" steps="137"/></proof>
   <proof prover="3" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
   </goal>
   <goal name="VC isqrt.8.7" expl="VC for isqrt" proved="true">
   <proof prover="0" timelimit="5"><result status="valid" time="0.51" steps="122"/></proof>
   </goal>
   <goal name="VC isqrt.8.8" expl="VC for isqrt" proved="true">
   <proof prover="0" timelimit="5"><result status="valid" time="0.01" steps="31"/></proof>
   </goal>
   <goal name="VC isqrt.8.9" expl="VC for isqrt" proved="true">
   <proof prover="0" timelimit="5"><result status="valid" time="0.01" steps="32"/></proof>
   </goal>
   <goal name="VC isqrt.8.10" expl="VC for isqrt" proved="true">
   <proof prover="0" timelimit="5"><result status="valid" time="0.01" steps="33"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC isqrt.9" expl="postcondition" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.55"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="_B_non_neg" proved="true">
 <proof prover="0" timelimit="5" obsolete="true"><result status="valid" time="0.01" steps="32"/></proof>
 <proof prover="3"><result status="valid" time="0.10"/></proof>
 </goal>
 <goal name="_B_group_homomorphism" proved="true">
 <proof prover="0"><result status="valid" time="0.01" steps="45"/></proof>
 <proof prover="3"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="_B_inverse" proved="true">
 <proof prover="0" timelimit="5"><result status="valid" time="0.10" steps="134"/></proof>
 </goal>
 <goal name="_B_sqrt_mul" proved="true">
 <proof prover="0" timelimit="5"><result status="valid" time="0.47" steps="200"/></proof>
 </goal>
 <goal name="_B_spec_pos" proved="true">
 <transf name="intros" proved="true" arg1="n,H">
  <goal name="_B_spec_pos.0" proved="true">
  <transf name="assert" proved="true" arg1="(pow (from_int 4) (from_int n) = from_int (power 4 n))">
   <goal name="_B_spec_pos.0.0" expl="asserted formula" proved="true">
   <proof prover="0" timelimit="5"><result status="valid" time="0.01" steps="12"/></proof>
   </goal>
   <goal name="_B_spec_pos.0.1" proved="true">
   <proof prover="1" timelimit="5"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="_B_spec_neg_0" proved="true">
 <proof prover="0" timelimit="5"><result status="valid" time="0.01" steps="12"/></proof>
 </goal>
 <goal name="_B_spec_neg" proved="true">
 <proof prover="0" timelimit="5"><result status="valid" time="0.04" steps="66"/></proof>
 </goal>
 <goal name="pow_mul2_exp" proved="true">
 <proof prover="0" timelimit="5"><result status="valid" time="0.12" steps="62"/></proof>
 <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 </goal>
 <goal name="VC round_z_over_4" expl="VC for round_z_over_4" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC round_z_over_4.0" expl="precondition" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC round_z_over_4.1" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC round_z_over_4.1.0" expl="assertion" proved="true">
   <proof prover="0" timelimit="5"><result status="valid" time="0.04" steps="154"/></proof>
   </goal>
   <goal name="VC round_z_over_4.1.1" expl="VC for round_z_over_4" proved="true">
   <proof prover="3"><result status="valid" time="0.17"/></proof>
   </goal>
   <goal name="VC round_z_over_4.1.2" expl="VC for round_z_over_4" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC round_z_over_4.1.3" expl="VC for round_z_over_4" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC round_z_over_4.1.4" expl="VC for round_z_over_4" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="VC round_z_over_4.1.4.0" expl="VC for round_z_over_4" proved="true">
    <proof prover="3"><result status="valid" time="0.08"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC round_z_over_4.1.5" expl="VC for round_z_over_4" proved="true">
   <proof prover="3"><result status="valid" time="0.22"/></proof>
   </goal>
   <goal name="VC round_z_over_4.1.6" expl="VC for round_z_over_4" proved="true">
   <proof prover="3"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC round_z_over_4.1.7" expl="VC for round_z_over_4" proved="true">
   <proof prover="0"><result status="valid" time="0.23" steps="180"/></proof>
   </goal>
   <goal name="VC round_z_over_4.1.8" expl="VC for round_z_over_4" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="22"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC round_z_over_4.2" expl="assertion" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC round_z_over_4.2.0" expl="VC for round_z_over_4" proved="true">
   <proof prover="0"><result status="valid" time="0.15" steps="99"/></proof>
   </goal>
   <goal name="VC round_z_over_4.2.1" expl="VC for round_z_over_4" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC round_z_over_4.2.2" expl="VC for round_z_over_4" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC round_z_over_4.2.3" expl="VC for round_z_over_4" proved="true">
   <proof prover="3"><result status="valid" time="0.19"/></proof>
   </goal>
   <goal name="VC round_z_over_4.2.4" expl="VC for round_z_over_4" proved="true">
   <proof prover="3"><result status="valid" time="0.20"/></proof>
   </goal>
   <goal name="VC round_z_over_4.2.5" expl="VC for round_z_over_4" proved="true">
   <proof prover="3"><result status="valid" time="0.07"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC round_z_over_4.3" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.69" steps="677"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC compute_round" expl="VC for compute_round" proved="true">
 <transf name="split_all_full" proved="true" >
  <goal name="VC compute_round.0" expl="assertion" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC compute_round.0.0" expl="VC for compute_round" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC compute_round.0.1" expl="VC for compute_round" proved="true">
   <proof prover="0"><result status="valid" time="0.73" steps="466"/></proof>
   </goal>
   <goal name="VC compute_round.0.2" expl="VC for compute_round" proved="true">
   <proof prover="0"><result status="valid" time="0.09" steps="105"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
   </goal>
   <goal name="VC compute_round.0.3" expl="VC for compute_round" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="88"/></proof>
   </goal>
   <goal name="VC compute_round.0.4" expl="VC for compute_round" proved="true">
   <proof prover="3" timelimit="5"><result status="valid" time="0.07"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC compute_round.1" expl="assertion" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC compute_round.1.0" expl="VC for compute_round" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC compute_round.1.1" expl="VC for compute_round" proved="true">
   <proof prover="0"><result status="valid" time="0.12" steps="116"/></proof>
   </goal>
   <goal name="VC compute_round.1.2" expl="VC for compute_round" proved="true">
   <proof prover="0"><result status="valid" time="1.09" steps="421"/></proof>
   </goal>
   <goal name="VC compute_round.1.3" expl="VC for compute_round" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="20"/></proof>
   </goal>
   <goal name="VC compute_round.1.4" expl="VC for compute_round" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC compute_round.2" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.08"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC compute_add" expl="VC for compute_add" proved="true">
 <proof prover="0"><result status="valid" time="0.02" steps="43"/></proof>
 <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
 </goal>
 <goal name="VC compute_neg" expl="VC for compute_neg" proved="true">
 <proof prover="0"><result status="valid" time="0.02" steps="92"/></proof>
 </goal>
 <goal name="VC compute_sub" expl="VC for compute_sub" proved="true">
 <proof prover="3"><result status="valid" time="0.09"/></proof>
 </goal>
 <goal name="VC compute_cst" expl="VC for compute_cst" proved="true">
 <transf name="split_all_full" proved="true" >
  <goal name="VC compute_cst.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC compute_cst.1" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC compute_cst.1.0" expl="VC for compute_cst" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="175"/></proof>
   </goal>
   <goal name="VC compute_cst.1.1" expl="VC for compute_cst" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="16"/></proof>
   </goal>
   <goal name="VC compute_cst.1.2" expl="VC for compute_cst" proved="true">
   <proof prover="0" timelimit="5"><result status="valid" time="0.13" steps="154"/></proof>
   </goal>
   <goal name="VC compute_cst.1.3" expl="VC for compute_cst" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="20"/></proof>
   </goal>
   <goal name="VC compute_cst.1.4" expl="VC for compute_cst" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="22"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC compute_cst.2" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC compute_cst.2.0" expl="VC for compute_cst" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="16"/></proof>
   </goal>
   <goal name="VC compute_cst.2.1" expl="VC for compute_cst" proved="true">
   <proof prover="3"><result status="valid" time="0.16"/></proof>
   </goal>
   <goal name="VC compute_cst.2.2" expl="VC for compute_cst" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="20"/></proof>
   </goal>
   <goal name="VC compute_cst.2.3" expl="VC for compute_cst" proved="true">
   <proof prover="0"><result status="valid" time="0.22" steps="195"/></proof>
   </goal>
   <goal name="VC compute_cst.2.4" expl="VC for compute_cst" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="24"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC compute_cst.3" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC compute_cst.4" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC compute_cst.5" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC compute_cst.5.0" expl="VC for compute_cst" proved="true">
   <proof prover="0"><result status="valid" time="0.06" steps="14"/></proof>
   </goal>
   <goal name="VC compute_cst.5.1" expl="VC for compute_cst" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="14"/></proof>
   </goal>
   <goal name="VC compute_cst.5.2" expl="VC for compute_cst" proved="true">
   <proof prover="0"><result status="valid" time="0.34" steps="293"/></proof>
   </goal>
   <goal name="VC compute_cst.5.3" expl="VC for compute_cst" proved="true">
   <proof prover="2"><result status="valid" time="0.52"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC compute_cst.6" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC compute_cst.6.0" expl="VC for compute_cst" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="16"/></proof>
   </goal>
   <goal name="VC compute_cst.6.1" expl="VC for compute_cst" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC compute_cst.6.2" expl="VC for compute_cst" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="19"/></proof>
   </goal>
   <goal name="VC compute_cst.6.3" expl="VC for compute_cst" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="19"/></proof>
   </goal>
   <goal name="VC compute_cst.6.4" expl="VC for compute_cst" proved="true">
   <proof prover="2"><result status="valid" time="0.43"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC compute_cst.7" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="110"/></proof>
  </goal>
  <goal name="VC compute_cst.8" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC compute_cst.9" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.08"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC _sqrt_incr_spec" expl="VC for _sqrt_incr_spec" proved="true">
 <proof prover="0"><result status="valid" time="0.15" steps="333"/></proof>
 </goal>
 <goal name="VC _sqrt_incr_bounds" expl="VC for _sqrt_incr_bounds" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC _sqrt_incr_bounds.0" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="270"/></proof>
  </goal>
  <goal name="VC _sqrt_incr_bounds.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="53"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC sqrt_ceil_floor" expl="VC for sqrt_ceil_floor" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC sqrt_ceil_floor.0" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC sqrt_ceil_floor.1" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC sqrt_ceil_floor.2" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC sqrt_ceil_floor.2.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC sqrt_ceil_floor.2.1" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="17"/></proof>
   </goal>
   <goal name="VC sqrt_ceil_floor.2.2" expl="VC for sqrt_ceil_floor" proved="true">
   <proof prover="3"><result status="valid" time="0.22"/></proof>
   </goal>
   <goal name="VC sqrt_ceil_floor.2.3" expl="VC for sqrt_ceil_floor" proved="true">
   <proof prover="0"><result status="valid" time="0.13" steps="153"/></proof>
   </goal>
   <goal name="VC sqrt_ceil_floor.2.4" expl="VC for sqrt_ceil_floor" proved="true">
   <proof prover="0"><result status="valid" time="0.18" steps="143"/></proof>
   </goal>
   <goal name="VC sqrt_ceil_floor.2.5" expl="VC for sqrt_ceil_floor" proved="true">
   <proof prover="3"><result status="valid" time="0.26"/></proof>
   </goal>
   <goal name="VC sqrt_ceil_floor.2.6" expl="VC for sqrt_ceil_floor" proved="true">
   <proof prover="0"><result status="valid" time="0.34" steps="173"/></proof>
   </goal>
   <goal name="VC sqrt_ceil_floor.2.7" expl="VC for sqrt_ceil_floor" proved="true">
   <proof prover="0"><result status="valid" time="0.34" steps="180"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC sqrt_ceil_floor.3" expl="unreachable point" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC sqrt_ceil_floor.4" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC sqrt_ceil_floor.5" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC sqrt_floor_floor" expl="VC for sqrt_floor_floor" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC sqrt_floor_floor.0" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="VC sqrt_floor_floor.1" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="VC sqrt_floor_floor.2" expl="unreachable point" proved="true">
  <proof prover="3"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC sqrt_floor_floor.3" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="113"/></proof>
  </goal>
  <goal name="VC sqrt_floor_floor.4" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.06"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC compute_sqrt" expl="VC for compute_sqrt" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC compute_sqrt.0" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="VC compute_sqrt.1" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC compute_sqrt.1.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC compute_sqrt.1.1" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="20"/></proof>
   </goal>
   <goal name="VC compute_sqrt.1.2" expl="VC for compute_sqrt" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC compute_sqrt.1.3" expl="VC for compute_sqrt" proved="true">
   <proof prover="3"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC compute_sqrt.1.4" expl="VC for compute_sqrt" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC compute_sqrt.1.5" expl="VC for compute_sqrt" proved="true">
   <proof prover="3"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC compute_sqrt.1.6" expl="VC for compute_sqrt" proved="true">
   <proof prover="0"><result status="valid" time="0.13" steps="119"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC compute_sqrt.2" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC compute_sqrt.2.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC compute_sqrt.2.1" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC compute_sqrt.2.2" expl="VC for compute_sqrt" proved="true">
   <proof prover="3"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC compute_sqrt.2.3" expl="VC for compute_sqrt" proved="true">
   <proof prover="3"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC compute_sqrt.2.4" expl="VC for compute_sqrt" proved="true">
   <proof prover="3"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC compute_sqrt.2.5" expl="VC for compute_sqrt" proved="true">
   <proof prover="3"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC compute_sqrt.2.6" expl="VC for compute_sqrt" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="28"/></proof>
   </goal>
   <goal name="VC compute_sqrt.2.7" expl="VC for compute_sqrt" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="30"/></proof>
   </goal>
   <goal name="VC compute_sqrt.2.8" expl="VC for compute_sqrt" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="32"/></proof>
   </goal>
   <goal name="VC compute_sqrt.2.9" expl="VC for compute_sqrt" proved="true">
   <proof prover="6"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC compute_sqrt.2.10" expl="VC for compute_sqrt" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="185"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC compute_sqrt.3" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC compute_sqrt.3.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC compute_sqrt.3.1" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC compute_sqrt.3.2" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="22"/></proof>
   </goal>
   <goal name="VC compute_sqrt.3.3" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC compute_sqrt.3.4" expl="VC for compute_sqrt" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC compute_sqrt.3.5" expl="VC for compute_sqrt" proved="true">
   <transf name="clear_but" proved="true" arg1="H1,H">
    <goal name="VC compute_sqrt.3.5.0" expl="VC for compute_sqrt" proved="true">
    <proof prover="0"><result status="valid" time="0.08" steps="184"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC compute_sqrt.3.6" expl="VC for compute_sqrt" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC compute_sqrt.3.7" expl="VC for compute_sqrt" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="28"/></proof>
   </goal>
   <goal name="VC compute_sqrt.3.8" expl="VC for compute_sqrt" proved="true">
   <proof prover="3"><result status="valid" time="0.10"/></proof>
   </goal>
   <goal name="VC compute_sqrt.3.9" expl="VC for compute_sqrt" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC compute_sqrt.3.10" expl="VC for compute_sqrt" proved="true">
   <proof prover="3"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC compute_sqrt.3.11" expl="VC for compute_sqrt" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="32"/></proof>
   </goal>
   <goal name="VC compute_sqrt.3.12" expl="VC for compute_sqrt" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="34"/></proof>
   </goal>
   <goal name="VC compute_sqrt.3.13" expl="VC for compute_sqrt" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="36"/></proof>
   </goal>
   <goal name="VC compute_sqrt.3.14" expl="VC for compute_sqrt" proved="true">
   <proof prover="0"><result status="valid" time="0.45" steps="215"/></proof>
   </goal>
   <goal name="VC compute_sqrt.3.15" expl="VC for compute_sqrt" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="191"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC compute_sqrt.4" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC compute_sqrt.5" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="159"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC compute" expl="VC for compute" proved="true">
 <proof prover="3"><result status="valid" time="0.72"/></proof>
 </goal>
 <goal name="VC euclid_uniq" expl="VC for euclid_uniq" proved="true">
 <proof prover="3"><result status="valid" time="0.08"/></proof>
 </goal>
 <goal name="VC dividend_incr" expl="VC for dividend_incr" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC dividend_incr.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC dividend_incr.1" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="55"/></proof>
  </goal>
  <goal name="VC dividend_incr.2" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC dividend_incr.2.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="24"/></proof>
   </goal>
   <goal name="VC dividend_incr.2.1" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC dividend_incr.2.2" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC dividend_incr.2.3" expl="VC for dividend_incr" proved="true">
   <proof prover="3"><result status="valid" time="0.09"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC dividend_incr.3" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="56"/></proof>
  </goal>
  <goal name="VC dividend_incr.4" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="124"/></proof>
  </goal>
  <goal name="VC dividend_incr.5" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="81"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC dividend_decr" expl="VC for dividend_decr" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC dividend_decr.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC dividend_decr.1" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="61"/></proof>
  </goal>
  <goal name="VC dividend_decr.2" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="131"/></proof>
  </goal>
  <goal name="VC dividend_decr.3" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="60"/></proof>
  </goal>
  <goal name="VC dividend_decr.4" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="73"/></proof>
  </goal>
  <goal name="VC dividend_decr.5" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="116"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC inv_decreasing" expl="VC for inv_decreasing" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC inv_decreasing.0" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC inv_decreasing.0.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="37"/></proof>
   </goal>
   <goal name="VC inv_decreasing.0.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="43"/></proof>
   </goal>
   <goal name="VC inv_decreasing.0.2" expl="postcondition" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC inv_decreasing.0.3" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="17"/></proof>
   </goal>
   <goal name="VC inv_decreasing.0.4" expl="VC for inv_decreasing" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="VC inv_decreasing.0.4.0" expl="VC for inv_decreasing" proved="true">
    <proof prover="0" timelimit="10" memlimit="4000"><result status="valid" time="1.13" steps="71"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC inv_decreasing.0.5" expl="VC for inv_decreasing" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC inv_decreasing.0.6" expl="VC for inv_decreasing" proved="true">
   <proof prover="0"><result status="valid" time="0.05" steps="64"/></proof>
   </goal>
   <goal name="VC inv_decreasing.0.7" expl="VC for inv_decreasing" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="23"/></proof>
   </goal>
   <goal name="VC inv_decreasing.0.8" expl="VC for inv_decreasing" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="23"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="_B_inv" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="43"/></proof>
 </goal>
 <goal name="VC inv_framing" expl="VC for inv_framing" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC inv_framing.0" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC inv_framing.0.0" expl="postcondition" proved="true">
   <proof prover="3"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC inv_framing.0.1" expl="postcondition" proved="true">
   <proof prover="3"><result status="valid" time="0.11"/></proof>
   </goal>
   <goal name="VC inv_framing.0.2" expl="postcondition" proved="true">
   <proof prover="3"><result status="valid" time="0.22"/></proof>
   </goal>
   <goal name="VC inv_framing.0.3" expl="postcondition" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC inv_framing.0.4" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="76"/></proof>
   </goal>
   <goal name="VC inv_framing.0.5" expl="postcondition" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC inv_framing.0.6" expl="VC for inv_framing" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="23"/></proof>
   </goal>
   <goal name="VC inv_framing.0.7" expl="VC for inv_framing" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="90"/></proof>
   </goal>
   <goal name="VC inv_framing.0.8" expl="VC for inv_framing" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="123"/></proof>
   </goal>
   <goal name="VC inv_framing.0.9" expl="VC for inv_framing" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="27"/></proof>
   </goal>
   <goal name="VC inv_framing.0.10" expl="VC for inv_framing" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="31"/></proof>
   </goal>
   <goal name="VC inv_framing.0.11" expl="VC for inv_framing" proved="true">
   <proof prover="3"><result status="valid" time="0.07"/></proof>
   </goal>
   <goal name="VC inv_framing.0.12" expl="VC for inv_framing" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC inv_framing.0.13" expl="VC for inv_framing" proved="true">
   <proof prover="0"><result status="valid" time="0.05" steps="34"/></proof>
   </goal>
   <goal name="VC inv_framing.0.14" expl="VC for inv_framing" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC inv_framing.0.15" expl="VC for inv_framing" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC inv_simple_simple" expl="VC for inv_simple_simple">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="1" obsolete="true"><result status="highfailure" time="0.07"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="5" obsolete="true"><result status="highfailure" time="0.00"/></proof>
 <transf name="split_vc" >
  <goal name="VC inv_simple_simple.0" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="66"/></proof>
  </goal>
  <goal name="VC inv_simple_simple.1" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC inv_simple_simple.1.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.1.1" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.21"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.1.2" expl="VC for inv_simple_simple" proved="true">
   <proof prover="0"><result status="valid" time="0.08" steps="145"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.1.3" expl="VC for inv_simple_simple" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.1.4" expl="VC for inv_simple_simple" proved="true">
   <proof prover="3"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.1.5" expl="VC for inv_simple_simple" proved="true">
   <proof prover="0"><result status="valid" time="0.10" steps="168"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.1.6" expl="VC for inv_simple_simple" proved="true">
   <proof prover="3"><result status="valid" time="0.40"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.1.7" expl="VC for inv_simple_simple" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="31"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.1.8" expl="VC for inv_simple_simple" proved="true">
   <proof prover="3"><result status="valid" time="0.13"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC inv_simple_simple.2" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC inv_simple_simple.2.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="22"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.2.1" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.42"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.2.2" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="26"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.2.3" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="26"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.2.4" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.06" steps="30"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.2.5" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="30"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.2.6" expl="VC for inv_simple_simple" proved="true">
   <proof prover="3"><result status="valid" time="0.08"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.2.7" expl="VC for inv_simple_simple" proved="true">
   <proof prover="6"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.2.8" expl="VC for inv_simple_simple" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="35"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.2.9" expl="VC for inv_simple_simple" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.2.10" expl="VC for inv_simple_simple" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.2.11" expl="VC for inv_simple_simple" proved="true">
   <proof prover="3"><result status="valid" time="0.09"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.2.12" expl="VC for inv_simple_simple" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="40"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.2.13" expl="VC for inv_simple_simple" proved="true">
   <proof prover="3"><result status="valid" time="0.14"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC inv_simple_simple.3" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.31"/></proof>
  </goal>
  <goal name="VC inv_simple_simple.4" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.27"/></proof>
  </goal>
  <goal name="VC inv_simple_simple.5" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC inv_simple_simple.5.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.32"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.5.1" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.30"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.5.2" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.13"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.5.3" expl="VC for inv_simple_simple" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="38"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.5.4" expl="VC for inv_simple_simple" proved="true">
   <proof prover="6"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.5.5" expl="VC for inv_simple_simple" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="38"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.5.6" expl="VC for inv_simple_simple" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="38"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.5.7" expl="VC for inv_simple_simple" proved="true">
   <proof prover="6"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.5.8" expl="VC for inv_simple_simple" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="38"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.5.9" expl="VC for inv_simple_simple" proved="true">
   <proof prover="3"><result status="valid" time="0.16"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.5.10" expl="VC for inv_simple_simple" proved="true">
   <proof prover="0"><result status="valid" time="0.09" steps="52"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.5.11" expl="VC for inv_simple_simple" proved="true">
   <proof prover="0"><result status="valid" time="0.12" steps="54"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.5.12" expl="VC for inv_simple_simple" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="54"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.5.13" expl="VC for inv_simple_simple" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="54"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.5.14" expl="VC for inv_simple_simple" proved="true">
   <proof prover="3"><result status="valid" time="0.18"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.5.15" expl="VC for inv_simple_simple" proved="true">
   <proof prover="4"><result status="valid" time="0.33"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.5.16" expl="VC for inv_simple_simple" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.5.17" expl="VC for inv_simple_simple" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.5.18" expl="VC for inv_simple_simple" proved="true">
   <proof prover="6"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.5.19" expl="VC for inv_simple_simple" proved="true">
   <proof prover="4"><result status="valid" time="0.32"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.5.20" expl="VC for inv_simple_simple" proved="true">
   <transf name="clear_but" proved="true" arg1="H,H1">
    <goal name="VC inv_simple_simple.5.20.0" expl="VC for inv_simple_simple" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="14"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC inv_simple_simple.5.21" expl="VC for inv_simple_simple" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.5.22" expl="VC for inv_simple_simple" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.5.23" expl="VC for inv_simple_simple" proved="true">
   <proof prover="2"><result status="valid" time="0.42"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.5.24" expl="VC for inv_simple_simple" proved="true">
   <proof prover="3"><result status="valid" time="0.83"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.5.25" expl="VC for inv_simple_simple" proved="true">
   <proof prover="3"><result status="valid" time="0.88"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.5.26" expl="VC for inv_simple_simple" proved="true">
   <proof prover="4"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.5.27" expl="VC for inv_simple_simple" proved="true">
   <proof prover="3"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.5.28" expl="VC for inv_simple_simple" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.5.29" expl="VC for inv_simple_simple" proved="true">
   <proof prover="4"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.5.30" expl="VC for inv_simple_simple" proved="true">
   <proof prover="2"><result status="valid" time="0.36"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.5.31" expl="VC for inv_simple_simple" proved="true">
   <proof prover="6"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.5.32" expl="VC for inv_simple_simple" proved="true">
   <proof prover="2"><result status="valid" time="0.15"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.5.33" expl="VC for inv_simple_simple" proved="true">
   <transf name="clear_but" proved="true" arg1="H3,H2,H1,H">
    <goal name="VC inv_simple_simple.5.33.0" expl="VC for inv_simple_simple" proved="true">
    <proof prover="0"><result status="valid" time="0.04" steps="18"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC inv_simple_simple.6" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.39"/></proof>
  </goal>
  <goal name="VC inv_simple_simple.7" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC inv_simple_simple.7.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.7.1" expl="VC for inv_simple_simple" proved="true">
   <proof prover="3"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.7.2" expl="VC for inv_simple_simple" proved="true">
   <proof prover="0"><result status="valid" time="0.30" steps="231"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.7.3" expl="VC for inv_simple_simple" proved="true">
   <proof prover="0"><result status="valid" time="0.09" steps="202"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.7.4" expl="VC for inv_simple_simple" proved="true">
   <proof prover="3"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.7.5" expl="VC for inv_simple_simple" proved="true">
   <proof prover="3"><result status="valid" time="0.13"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.7.6" expl="VC for inv_simple_simple" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="42"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.7.7" expl="VC for inv_simple_simple" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="50"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.7.8" expl="VC for inv_simple_simple" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.7.9" expl="VC for inv_simple_simple" proved="true">
   <proof prover="0"><result status="valid" time="0.35" steps="53"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.7.10" expl="VC for inv_simple_simple" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.7.11" expl="VC for inv_simple_simple" proved="true">
   <proof prover="4"><result status="valid" time="0.64"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.7.12" expl="VC for inv_simple_simple" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="57"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC inv_simple_simple.8" expl="assertion" proved="true">
  <transf name="clear_but" proved="true" arg1="dividend_decr,H11,H8,H7,H5,H1,H">
   <goal name="VC inv_simple_simple.8.0" expl="assertion" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC inv_simple_simple.8.0.0" expl="assertion" proved="true">
    <proof prover="0"><result status="valid" time="0.94" steps="511"/></proof>
    </goal>
    <goal name="VC inv_simple_simple.8.0.1" expl="assertion" proved="true">
    <proof prover="3"><result status="valid" time="0.23"/></proof>
    </goal>
    <goal name="VC inv_simple_simple.8.0.2" expl="assertion" proved="true">
    <proof prover="6"><result status="valid" time="0.03"/></proof>
    </goal>
    <goal name="VC inv_simple_simple.8.0.3" expl="assertion" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="34"/></proof>
    </goal>
    <goal name="VC inv_simple_simple.8.0.4" expl="assertion" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="34"/></proof>
    </goal>
    <goal name="VC inv_simple_simple.8.0.5" expl="VC for inv_simple_simple" proved="true">
    <proof prover="3"><result status="valid" time="0.07"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC inv_simple_simple.9" expl="assertion" proved="true">
  <proof prover="6" obsolete="true"><result status="valid" time="0.05"/></proof>
  <transf name="clear_but" proved="true" arg1="dividend_incr,H12,H8,H9,H5,H2,H1">
   <goal name="VC inv_simple_simple.9.0" expl="assertion" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC inv_simple_simple.9.0.0" expl="assertion" proved="true">
    <proof prover="0"><result status="valid" time="0.93" steps="507"/></proof>
    </goal>
    <goal name="VC inv_simple_simple.9.0.1" expl="assertion" proved="true">
    <proof prover="3"><result status="valid" time="0.26"/></proof>
    </goal>
    <goal name="VC inv_simple_simple.9.0.2" expl="assertion" proved="true">
    <proof prover="3"><result status="valid" time="0.26"/></proof>
    </goal>
    <goal name="VC inv_simple_simple.9.0.3" expl="assertion" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="34"/></proof>
    </goal>
    <goal name="VC inv_simple_simple.9.0.4" expl="assertion" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="34"/></proof>
    </goal>
    <goal name="VC inv_simple_simple.9.0.5" expl="VC for inv_simple_simple" proved="true">
    <proof prover="3"><result status="valid" time="0.07"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC inv_simple_simple.10" expl="assertion">
  <proof prover="0"><result status="timeout" time="1.00"/></proof>
  <proof prover="1"><result status="highfailure" time="0.04"/></proof>
  <proof prover="2"><result status="timeout" time="1.00"/></proof>
  <proof prover="3"><result status="timeout" time="1.00"/></proof>
  <proof prover="4"><result status="timeout" time="1.00"/></proof>
  <proof prover="5"><result status="highfailure" time="0.00"/></proof>
  <proof prover="6"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="VC inv_simple_simple.11" expl="assertion">
  </goal>
  <goal name="VC inv_simple_simple.12" expl="postcondition">
  </goal>
 </transf>
 </goal>
 <goal name="VC inv_simple" expl="VC for inv_simple">
 </goal>
</theory>
</file>
</why3session>
